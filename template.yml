AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Project pi be lesss
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: UserAPI
      Mode: overwrite
      StageName: Prod
      Description: API for FE user requests here
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:eu-west-1:258885766453:userpool/eu-west-1_UFKLlH1wi
        AddDefaultAuthorizerToCorsPreflight: false
      Cors:
        AllowMethods: "'POST, GET, DELETE, OPTIONS'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"


  ##### Questions API lambdas really #####
  DeleteQuestionLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/question/deleteQuestion.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        DeleteQuestionLambdaEvent:
          Type: Api
          Properties:
            Path: /questionnaire/{id}/question/{questionId}
            Method: delete
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  PostQuestionLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/question/postQuestion.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        PostQuestionLambdaEvent:
          Type: Api
          Properties:
            Path: /questionnaire/{id}/question/{questionId}
            Method: post
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  ShowQuestionLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/question/showQuestion.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        ShowQuestionLambdaEvent:
          Type: Api
          Properties:
            Path: /questionnaire/{id}/question/{questionId}
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  GetQuestionnaireQuestionsLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/question/getQuestionnaireQuestions.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        GetQuestionnaireQuestionsLambdaEvent:
          Type: Api
          Properties:
            Path: /questionnaire/question/{questionnaireId}
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  ##### Questionnaire API lambdas #####
  deleteQuestionnaireLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/questionnaire/deleteQuestionnaire.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        deleteQuestionnaireLambdaEvent:
          Type: Api
          Properties:
            Path: /questionnaire/{id}
            Method: delete
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  getQuestionnaireLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/questionnaire/getQuestionnaire.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        getQuestionnaireLambdaEvent:
          Type: Api
          Properties:
            Path: /questionnaire
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  postQuestionnaireLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/questionnaire/postQuestionnaire.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        postQuestionnaireLambdaEvent:
          Type: Api
          Properties:
            Path: /questionnaire/{id}
            Method: post
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  showQuestionnaireLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/questionnaire/showQuestionnaire.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        showQuestionnaireLambdaEvent:
          Type: Api
          Properties:
            Path: /questionnaire/{id}
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  ##### Types API lambdas #####
  getQuestionTypeLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/types/getQuestionTypes.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        getQuestionTypeLambdaEvent:
          Type: Api
          Properties:
            Path: /question-type
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  ##### User API lambdas #####
  deleteUserQuestionnaireLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/user/deleteQuestionnaire.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        deleteUserQuestionnaireLambdaEvent:
          Type: Api
          Properties:
            Path: /user/questionnaire/{id}
            Method: delete
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  getUserQuestionnairesLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/user/getQuestionnaires.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        getUserQuestionnairesLambdaEvent:
          Type: Api
          Properties:
            Path: /user/questionnaires
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  postUserQuestionnaireLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/user/postQuestionnaire.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        postUserQuestionnaireLambdaEvent:
          Type: Api
          Properties:
            Path: /user/questionnaire/{id}
            Method: post
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  showUserQuestionnaireLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/user/showQuestionnaire.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        showUserQuestionnaireLambdaEvent:
          Type: Api
          Properties:
            Path: /user/questionnaire/{id}
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"
  getUserQuestionnaireLinkLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdas/user/getQuestionnaireLink.handler
      Runtime: nodejs12.x
      CodeUri: ./
      Description: 'Lambda function'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::258885766453:role/LambdaDynamoDBRole'
      Events:
        getUserQuestionnaireLinkLambdaEvent:
          Type: Api
          Properties:
            Path: /user/questionnaire/{id}/link
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          REGION: "eu-west-1"